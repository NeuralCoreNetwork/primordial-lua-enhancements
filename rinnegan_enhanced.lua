-- локалы
local allnigga = {}ffi = require "ffi" Discord = require("webhook")

local ticks = 0
engine.play_sound("primordial.wav", 1.0, 100)
local flr = math.floor
local anims = {
	w_alpha = 0,
	ex_alpha = 0,
	tsize = 0,
	extend_c = 0,
	extend_x = 0,
	disabler = 0,
	old_fl = 0,
	fl_s = 0,
}

local logictype = false
local sp = {}kb = {}call = {}anim = {}handles = {}avoid_collisions = {}pState = 0 iGroundTick = 0 bStop = false nowrandomize = false current_random = 0 
local player_data = {}
local resolver_confidence = {}
local miss_counters = {}
local soft_point_active = {}
callbacks_add, client_get_fps, client_get_local_time, color_t, engine_get_choked_commands, engine_get_latency, engine_is_connected, entity_list_get_entity, entity_list_get_local_player, get_charge, global_vars_max_clients, input_get_mouse_pos, input_is_key_held, input_is_mouse_in_bounds, kb.handle, math_max, math_min, menu_add_checkbox, menu_add_multi_selection, menu_add_selection, menu_add_slider, menu_add_text_input, menu_find, menu_is_open, render_get_screen_size, pairs, render_create_font, render_get_text_size, render_pop_alpha_modifier, render_push_alpha_modifier, render_rect, render.rect_fade, render_rect_fade_round_box, render_rect_filled, render_ui, setmetatable, table_count, table_insert, vec2_t, type, tostring = callbacks.add, client.get_fps, client.get_local_time, color_t, engine.get_choked_commands, engine.get_latency, engine.is_connected, entity_list.get_entity, entity_list.get_local_player, exploits.get_charge, global_vars.max_clients, input.get_mouse_pos, input.is_key_held, input.is_mouse_in_bounds, kb.handle, math.max, math.min, menu.add_checkbox, menu.add_multi_selection, menu.add_selection, menu.add_slider, menu.add_text_input, menu.find, menu.is_open, render.get_screen_size, pairs, render.create_font, render.get_text_size, render.pop_alpha_modifier, render.push_alpha_modifier, render.rect, render.rect_fade, render.rect_fade_round_box, render.rect_filled, render.ui, setmetatable, table.count, table.insert, vec2_t, type, tostring

function anim.lerp(a,b,p) 
	return a + (b - a) *p 
end
function anim.create(name, value, time)
    if (anim[name] == nil) then anim[name] = value end
    anim[name] = anim.lerp(anim[name], value, time)
    return anim[name]
end
function is_scout()
	local lp = entity_list_get_local_player()
    if not lp:is_alive() or not lp:get_active_weapon() then return end
    local weap = lp:get_active_weapon():get_name()
    return weap == "ssg08"
end
function render_text(font, text, vector, color)
    render.text(font, text, vec2_t(vector.x+1,vector.y+1), color_t.new(0,0,0,flr(color.a*0.75)))
    render.text(font, text, vector, color_t.new(color.r,color.g,color.b,flr(color.a*0.95)))
end
function table_count(tbl)
    if tbl == nil then return 0 end
    if #tbl == 0 then 
        local count = 0
        for data in pairs(tbl) do count = count + 1 end
        return count 
    end
    return #tbl
end
local drag = {}
-- нужное
local print = function(text)
return print("[rinnegan] " .. text)
end

--хз мб ворк тестим

-- если тип юзает ватермарку чита то он лох но реклама не помешает
local function on_draw_watermark(watermark_text)
        local maxim = cvars["name"]:get_string()
        return "rinnegan ~ " .. maxim
end

callbacks.add(e_callbacks.DRAW_WATERMARK, on_draw_watermark)

local build = "BETA"
local color = function(...)
    return color_t(...)
end

local render_pos = function(ctx, mode, int1, int2, in3)
ctx:set_render_pose(mode, math.random(math.random(int1, int2), math.random(int2, int3)))
end

lerp = function(a, b, t)
    return a + (b - a) * t
end

clamp = function(x, minval, maxval)
    if x < minval then
        return minval
    elseif x > maxval then
        return maxval
    else
        return x
    end
end

math.clamp = function(v, min, max)
    if min > max then
        min, max = max, min
    end
    if v > max then
        return max
    end
    if v < min then
        return v
    end
    return v
end

text_fade_animation = function(font, text, x, y, color1, color2, speed)
    local curtime = globals.cur_time()
    for i = 1, #text do
        local x_offset = i*5  
        local wave = math.cos(8 * speed * curtime + x_offset / 30)
        local lerped_color = {
            r = lerp(color1.r, color2.r, clamp(wave, 0, 1)),
            g = lerp(color1.g, color2.g, clamp(wave, 0, 1)),
            b = lerp(color1.b, color2.b, clamp(wave, 0, 1)),
            a = lerp(color1.a, color2.a, clamp(wave, 0, 1))
        }
        render.text(font, text:sub(i, i), vec2_t(x + x_offset, y),color_t(math.floor(lerped_color.r), math.floor(lerped_color.g), math.floor(lerped_color.b), math.floor(lerped_color.a)))
        
    end
end


local vector = function(one, two, three)
    if not three then
        return vec2_t(one, two)
    elseif three then
        return vec3_t(one, two, three)
    end
end

local cfg = {}
cfg.dir = "rinnegan/"
cfg.default_dir = {
"rinnegan/Default cfg.rng",  -- какой будет путь
"rinnegan/Skeerty cfg.rng",
"rinnegan/Lazerdim cfg.rng",
"rinnegan/Exploit use.rng",
}
cfg.name_cfgs = {
"default cfg.rng", -- нейм для проверок и т.п 
"skeerty cfg.rng",
"lazerdim cfg.rng",
"exploit use.rng",
}
cfg.name_cfg = {
"default",
"skeerty's",
"lazerdim's",
"exploit",
 -- просто любой нейм
}
cfg.default_config = { -- и тут поочередно кфгшки
--default
"",
--skeerty
"eyJDb25maWdzIjpbWyJDb25maWdzIGxpc3QiLDFdXSwiVmlzdWFsIjpbWyJlbmFibGUiLHRydWVdLFsiRmFkZWQgQ29sb3IgMiIsMjU1LDE4NiwyMjIsMjU1XSxbIkFuaW0uIFR5cGUiLDJdLFsiU2VwZXJhdG9yIixmYWxzZV0sWyJEbWcgSW5kaWNhdG9yIix0cnVlXSxbIlNvbGl1cyBzdHlsZSIsMl0sWyJNaW4uIFdpZHRoIiwxMjhdLFsiQmFja2dyb3VuZCBBbHBoYSIsMTAwXSxbIlBhZGRpbmciLDJdLFsiSGl0bWFya2VyIiwyXSxbIk1pbmRtZyBvbmx5IixmYWxzZV0sWyJNYXJrZXIgQ29sb3IiLDg4LDI1NSwyMDksMjU1XSxbIkZhZGVkIENvbG9yIDEiLDI1NSwyNTUsMjU1LDI1NV0sWyJTb2xpZCBDb2xvciIsMTQyLDE2NSwyMjksMjU1XSxbIkNvbnNvbGUgTG9ncyIsdHJ1ZV0sWyJFbGVtZW50cyIsW1siV2F0ZXJtYXJrIix0cnVlXSxbIkV4cGxvaXQgU3RhdGUiLHRydWVdLFsiSG90a2V5IExpc3QiLHRydWVdLFsiU3BlY3RhdG9yIExpc3QgKENvcm5lcmVkKSIsdHJ1ZV1dXSxbIlNrZWV0IEluZGljYXRvcnMiLFtbIkRUIix0cnVlXSxbIkhTIix0cnVlXSxbIk1EIix0cnVlXSxbIkhDIix0cnVlXSxbIkZTIix0cnVlXSxbIlNBRkUiLHRydWVdLFsiUElORyIsdHJ1ZV0sWyJGRCIsdHJ1ZV1dXSxbIkRhdGEgRWRpdG9yIixmYWxzZV1dLCJNaXNjIjpbWyJGYXN0IExhZGRlciIsW1sidXAiLHRydWVdLFsiZG93biIsdHJ1ZV1dXSxbIkFuaW1hdGlvbiBsZWcgbW92ZW1lbnQiLDVdLFsiTW92ZW1lbnQgZXhwbG9pdCIsZmFsc2VdLFsiRW5hYmxlIHRyYXNodGFsayIsdHJ1ZV0sWyJObyBGYWxsIERhbWFnZSIsdHJ1ZV0sWyJBaXJsYWcgZW5hYmxlIix0cnVlXSxbIkFuaW1hdGlvbiBsZWdzIGluIGFpciIsM10sWyJBbmltYXRpb24gc2xvdyB3YWxrIiw0XSxbIkVuYWJsZSBkZWFkdGFsayIsdHJ1ZV0sWyJFbmFibGUgY2xhbnRhZyIsdHJ1ZV0sWyJBdm9pZCBDb2xsaXNpb24iLHRydWVdLFsiRmFzdCBTd2l0Y2giLHRydWVdLFsibWF4LiBEaXN0YW5jZSIsMTVdLFsibWluLiBWZWxvY2l0eSIsNDhdXSwiUmFnZSI6W1siTmVlZCBscF96ID4gZW5lbXlfeiIsMTMyXSxbIkRlbGF5Iiw5XSxbImVuYWJsZSByZXNvbHZlciIsdHJ1ZV0sWyJUeXBlIHJlc29sdmVyIiw1XSxbIkZvcmNlIGhlYWQgaWYgdSBoaWdoZXIgdGhlbiBlbmVteSIsdHJ1ZV0sWyJDdXN0b20iLDBdLFsiRGVidWcgbG9ncyIsZmFsc2VdXSwiTG9naW5pbmciOltdLCJ0ZXN0IjpbWyJzb2x1cyB5IiwyODhdLFsic29sdXMgeCIsMzYxXV0sIkJ1aWxkZXIiOltbIltXXSBFbmFibGUgcm90YXRlIixmYWxzZV0sWyJbR10gRGVzeW5jIHJpZ2h0IiwxMDBdLFsiW0NdIERlZmVuc2l2ZSB5YXcgKDEpIiwwXSxbIltNXSBKaXR0ZXIgdHlwZSIsMV0sWyJbQV0gRGVzeW5jIHJpZ2h0IiwwXSxbIltBXSBEZWZlbnNpdmUgeWF3ICgxKSIsLTE4MF0sWyJbQ10gRGVzeW5jIHJpZ2h0IiwxMDBdLFsiW0ddIERlZmVuc2l2ZSB5YXcgKDEpIiwtNTZdLFsiQnVpbGRlciIsNl0sWyJbQStDXSBKaXR0ZXIgZnJlZXplIHRpY2tzIiwwXSxbIltNXSBEZXN5bmMgcmlnaHQiLDBdLFsiW1ddIERlZmVuc2l2ZSB0cmlnZ2VycyIsMl0sWyJbU10gRGVzeW5jIGxlZnQiLDBdLFsiW1NdIERlZmVuc2luYyB0eXBlIiwxXSxbIltNXSBKaXR0ZXIgdmFsdWUiLDBdLFsiW1NdIERlZmVuc2l2ZSB0cmlnZ2VycyIsMV0sWyJbQ10gSml0dGVyIHZhbHVlIiwwXSxbIltBK0NdIFJvdGF0ZSBzcGVlZCAoMSkiLDBdLFsiW1ddIERlZmVuc2luYyB0eXBlIiwzXSxbIltBXSBKaXR0ZXIgdmFsdWUiLC0yNl0sWyJbTV0gRGVmZW5zaXZlIHlhdyAoMSkiLDBdLFsiW0ddIEVuYWJsZSBkZXN5bmMiLHRydWVdLFsiW0ddIEppdHRlciB2YWx1ZSIsLTE3XSxbIltTXSBEZWZlbnNpdmUgeWF3ICgxKSIsMF0sWyJbR10gRW5hYmxlIHN0YXRlIix0cnVlXSxbIltNXSBEZXN5bmMgbGVmdCIsMF0sWyJbQStDXSBFbmFibGUgaml0dGVyIixmYWxzZV0sWyJbU10gRGVmZW5zaXZlIHBpdGNoIiwxXSxbIltTXSBEZXN5bmMgcmlnaHQiLDBdLFsiW1ddIERlZmVuc2l2ZSB5YXcgKDEpIiwtODZdLFsiW0FdIEVuYWJsZSByb3RhdGUiLGZhbHNlXSxbIltBXSBEZXN5bmMgbGVmdCIsMF0sWyJbV10gRGVmZW5zaXZlIHBpdGNoIiwxMF0sWyJbR10gRGVmZW5zaXZlIHRyaWdnZXJzIiwxXSxbIltXXSB
(Content truncated due to size limit. Use page ranges or line ranges to read remaining content)

